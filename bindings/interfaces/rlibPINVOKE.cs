/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.21
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

class rlibPINVOKE {

  class SWIGExceptionHelper {

    public delegate void SWIGExceptionDelegate(string message);

    static SWIGExceptionDelegate systemDelegate = new SWIGExceptionDelegate(ThrowSystemException);
    static SWIGExceptionDelegate outOfMemoryDelegate = new SWIGExceptionDelegate(ThrowOutOfMemoryException);
    static SWIGExceptionDelegate indexOutOfRangeDelegate = new SWIGExceptionDelegate(ThrowIndexOutOfRangeException);
    static SWIGExceptionDelegate divideByZeroDelegate = new SWIGExceptionDelegate(ThrowDivideByZeroException);
    static SWIGExceptionDelegate argumentOutOfRangeDelegate = new SWIGExceptionDelegate(ThrowArgumentOutOfRangeException);
    static SWIGExceptionDelegate nullReferenceDelegate = new SWIGExceptionDelegate(ThrowNullReferenceException);

    [DllImport("rlibcsharp", EntryPoint="SWIGRegisterExceptionCallbacks_rlib")]
    public static extern void SWIGRegisterExceptionCallbacks_rlib(
      SWIGExceptionDelegate systemExceptionDelegate,
      SWIGExceptionDelegate outOfMemoryDelegate, 
      SWIGExceptionDelegate indexOutOfRangeDelegate, 
      SWIGExceptionDelegate divideByZeroDelegate, 
      SWIGExceptionDelegate argumentOutOfRangeDelegate,
      SWIGExceptionDelegate nullReferenceDelegate);

    static void ThrowSystemException(string message) {
      throw new System.SystemException(message);
    }

    static void ThrowOutOfMemoryException(string message) {
      throw new System.OutOfMemoryException(message);
    }

    static void ThrowIndexOutOfRangeException(string message) {
      throw new System.IndexOutOfRangeException(message);
    }

    static void ThrowDivideByZeroException(string message) {
      throw new System.DivideByZeroException(message);
    }

    static void ThrowArgumentOutOfRangeException(string message) {
      throw new System.ArgumentOutOfRangeException(message);
    }

    static void ThrowNullReferenceException(string message) {
      throw new System.NullReferenceException(message);
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_rlib(systemDelegate, outOfMemoryDelegate, indexOutOfRangeDelegate, divideByZeroDelegate, argumentOutOfRangeDelegate, nullReferenceDelegate);
    }
  }

  static SWIGExceptionHelper exceptionHelper = new SWIGExceptionHelper();


  class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("rlibcsharp", EntryPoint="SWIGRegisterStringCallback_rlib")]
    public static extern void SWIGRegisterStringCallback_rlib(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_rlib(stringDelegate);
    }
  }

  static SWIGStringHelper stringHelper = new SWIGStringHelper();


  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_init")]
  public static extern IntPtr rlib_init();

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_datasource_mysql")]
  public static extern int rlib_add_datasource_mysql(IntPtr jarg1, string jarg2, string jarg3, string jarg4, string jarg5, string jarg6);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_datasource_postgres")]
  public static extern int rlib_add_datasource_postgres(IntPtr jarg1, string jarg2, string jarg3);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_datasource_odbc")]
  public static extern int rlib_add_datasource_odbc(IntPtr jarg1, string jarg2, string jarg3, string jarg4, string jarg5);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_datasource_xml")]
  public static extern int rlib_add_datasource_xml(IntPtr jarg1, string jarg2);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_datasource_csv")]
  public static extern int rlib_add_datasource_csv(IntPtr jarg1, string jarg2);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_query_as")]
  public static extern int rlib_add_query_as(IntPtr jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_report")]
  public static extern int rlib_add_report(IntPtr jarg1, string jarg2);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_report_from_buffer")]
  public static extern int rlib_add_report_from_buffer(IntPtr jarg1, string jarg2);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_execute")]
  public static extern int rlib_execute(IntPtr jarg1);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_get_content_type_as_text")]
  public static extern string rlib_get_content_type_as_text(IntPtr jarg1);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_spool")]
  public static extern int rlib_spool(IntPtr jarg1);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_set_output_format")]
  public static extern int rlib_set_output_format(IntPtr jarg1, int jarg2);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_resultset_follower_n_to_1")]
  public static extern int rlib_add_resultset_follower_n_to_1(IntPtr jarg1, string jarg2, string jarg3, string jarg4, string jarg5);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_resultset_follower")]
  public static extern int rlib_add_resultset_follower(IntPtr jarg1, string jarg2, string jarg3);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_set_output_format_from_text")]
  public static extern int rlib_set_output_format_from_text(IntPtr jarg1, string jarg2);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_get_output")]
  public static extern string rlib_get_output(IntPtr jarg1);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_get_output_length")]
  public static extern int rlib_get_output_length(IntPtr jarg1);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_signal_connect")]
  public static extern int rlib_signal_connect(IntPtr jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_signal_connect_string")]
  public static extern int rlib_signal_connect_string(IntPtr jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_query_refresh")]
  public static extern int rlib_query_refresh(IntPtr jarg1);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_add_parameter")]
  public static extern int rlib_add_parameter(IntPtr jarg1, string jarg2, string jarg3);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_set_locale")]
  public static extern int rlib_set_locale(IntPtr jarg1, string jarg2);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_set_output_parameter")]
  public static extern void rlib_set_output_parameter(IntPtr jarg1, string jarg2, string jarg3);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_set_output_encoding")]
  public static extern void rlib_set_output_encoding(IntPtr jarg1, string jarg2);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_set_datasource_encoding")]
  public static extern int rlib_set_datasource_encoding(IntPtr jarg1, string jarg2, string jarg3);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_free")]
  public static extern int rlib_free(IntPtr jarg1);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_version")]
  public static extern string rlib_version();

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_graph_add_bg_region")]
  public static extern int rlib_graph_add_bg_region(IntPtr jarg1, string jarg2, string jarg3, string jarg4, float jarg5, float jarg6);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_graph_clear_bg_region")]
  public static extern int rlib_graph_clear_bg_region(IntPtr jarg1, string jarg2);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_graph_set_x_minor_tick")]
  public static extern int rlib_graph_set_x_minor_tick(IntPtr jarg1, string jarg2, string jarg3);

  [DllImport("rlibcsharp", EntryPoint="CSharp_rlib_graph_set_x_minor_tick_by_location")]
  public static extern int rlib_graph_set_x_minor_tick_by_location(IntPtr jarg1, string jarg2, int jarg3);
}
